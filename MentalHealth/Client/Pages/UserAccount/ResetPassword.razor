@page "/user-profile/reset-password/{UserId}/{Code}"
<div class="card">
    <div class="card-body">

        <h3>Reset password</h3>

        <EditForm Model="@_resetPassword" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />

            <div class="row">
                <label class="col-4">New password: </label>
                <div class="col-8">
                    <InputText type="password" @bind-Value="_resetPassword.NewPassword" class="form-control" placeholder="Your new password" />
                    <ValidationMessage For="()=>_resetPassword.NewPassword" />
                </div>
            </div>
            <div class="row">
                <label class="col-4">Confirm new password: </label>
                <div class="col-8">
                    <InputText type="password" @bind-Value="_resetPassword.ConfirmNewPassword" class="form-control" placeholder="Confirm your new password" />
                    <ValidationMessage For="()=>_resetPassword.ConfirmNewPassword" />
                </div>
            </div>
            <button type="submit" class="btn btn-primary m-5" disabled="@Submitting">Submit</button>
        </EditForm>

        @if (Error == true)
        {
            <div class="alert alert-warning alert-dismissible">
                <button type="button" @onclick="() => { Error = null; }" class="close">&times;</button>
                @Response
            </div>
        }
        @if (Error == false)
        {
            <div class="alert alert-success alert-dismissible">
                <button class="close" @onclick="() => { Error = null; }">&times;</button>
                @Response
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public string UserId { get; set; }
    [Parameter]
    public string Code { get; set; }

    private MentalHealth.Shared.Models.UserAccount.ResetPassword _resetPassword = new();
    private string Response { get; set; }
    private bool? Error { get; set; }
    private bool Submitting { get; set; }

    private async Task HandleValidSubmit()
    {
        try
        {
            Submitting = true;
            _resetPassword.Id = UserId;
            _resetPassword.Code = Code;
            var response = await _httpClient.PostAsJsonAsync($"api/ApplicationUsers/reset-password", _resetPassword);

            Error = !response.IsSuccessStatusCode;
            Submitting = false;
            Response = await response.Content.ReadAsStringAsync();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}
